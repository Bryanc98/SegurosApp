// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SegurosApp.Data;

#nullable disable

namespace SegurosApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241015175836_FixClienteID")]
    partial class FixClienteID
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SegurosApp.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SegurosApp.Models.Cliente_ProductoFinanciero", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Numeroproducto")
                        .HasColumnType("int");

                    b.Property<int>("ProductoFinancieroId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProductoFinancieroId");

                    b.ToTable("Cliente_ProductoFinancieros");
                });

            modelBuilder.Entity("SegurosApp.Models.Cliente_Seguro", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroPoliza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoFinancieroId")
                        .HasColumnType("int");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("PlanId");

                    b.HasIndex("ProductoFinancieroId");

                    b.HasIndex("SeguroId");

                    b.ToTable("Cliente_Seguros");
                });

            modelBuilder.Entity("SegurosApp.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoPlan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EdadMax")
                        .HasColumnType("int");

                    b.Property<int>("EdadMin")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.Property<decimal>("couta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SeguroId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("SegurosApp.Models.ProductoFinanciero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductoFinancieros");
                });

            modelBuilder.Entity("SegurosApp.Models.Seguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("SegurosApp.Models.Seguro_ProductoFinanciero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductoFinancieroId")
                        .HasColumnType("int");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoFinancieroId");

                    b.HasIndex("SeguroId");

                    b.ToTable("Seguro_ProductoFinancieros");
                });

            modelBuilder.Entity("SegurosApp.Models.Cliente_ProductoFinanciero", b =>
                {
                    b.HasOne("SegurosApp.Models.Cliente", "Cliente")
                        .WithMany("Cliente_ProductoFinancieros")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegurosApp.Models.ProductoFinanciero", "ProductoFinanciero")
                        .WithMany()
                        .HasForeignKey("ProductoFinancieroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ProductoFinanciero");
                });

            modelBuilder.Entity("SegurosApp.Models.Cliente_Seguro", b =>
                {
                    b.HasOne("SegurosApp.Models.Cliente", "Cliente")
                        .WithMany("Cliente_Seguros")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegurosApp.Models.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SegurosApp.Models.ProductoFinanciero", "ProductoFinanciero")
                        .WithMany()
                        .HasForeignKey("ProductoFinancieroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SegurosApp.Models.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Plan");

                    b.Navigation("ProductoFinanciero");

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("SegurosApp.Models.Plan", b =>
                {
                    b.HasOne("SegurosApp.Models.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("SegurosApp.Models.Seguro_ProductoFinanciero", b =>
                {
                    b.HasOne("SegurosApp.Models.ProductoFinanciero", "ProductoFinanciero")
                        .WithMany()
                        .HasForeignKey("ProductoFinancieroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SegurosApp.Models.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductoFinanciero");

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("SegurosApp.Models.Cliente", b =>
                {
                    b.Navigation("Cliente_ProductoFinancieros");

                    b.Navigation("Cliente_Seguros");
                });
#pragma warning restore 612, 618
        }
    }
}
